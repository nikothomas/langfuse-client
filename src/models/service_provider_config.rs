/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceProviderConfig {
    #[serde(rename = "schemas")]
    pub schemas: Vec<String>,
    #[serde(rename = "documentationUri")]
    pub documentation_uri: String,
    #[serde(rename = "patch")]
    pub patch: models::ScimFeatureSupport,
    #[serde(rename = "bulk")]
    pub bulk: models::BulkConfig,
    #[serde(rename = "filter")]
    pub filter: models::FilterConfig,
    #[serde(rename = "changePassword")]
    pub change_password: models::ScimFeatureSupport,
    #[serde(rename = "sort")]
    pub sort: models::ScimFeatureSupport,
    #[serde(rename = "etag")]
    pub etag: models::ScimFeatureSupport,
    #[serde(rename = "authenticationSchemes")]
    pub authentication_schemes: Vec<models::AuthenticationScheme>,
    #[serde(rename = "meta")]
    pub meta: models::ResourceMeta,
}

impl ServiceProviderConfig {
    pub fn new(schemas: Vec<String>, documentation_uri: String, patch: models::ScimFeatureSupport, bulk: models::BulkConfig, filter: models::FilterConfig, change_password: models::ScimFeatureSupport, sort: models::ScimFeatureSupport, etag: models::ScimFeatureSupport, authentication_schemes: Vec<models::AuthenticationScheme>, meta: models::ResourceMeta) -> ServiceProviderConfig {
        ServiceProviderConfig {
            schemas,
            documentation_uri,
            patch,
            bulk,
            filter,
            change_password,
            sort,
            etag,
            authentication_schemes,
            meta,
        }
    }
}

